{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "SystemPrefixName": {
      "type": "string",
      "defaultValue": "Nist800Demo",
      "metadata": {
        "description": "String to append to all resource names"
      }
    },
    "Region": {
      "type": "string",
      "defaultValue": "West US",
      "metadata": {
        "description": "Region for the deployment"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0",
      "metadata": {
        "description": "IP Address Of Virtual Network Without CIDR"
      }
    },
    "vnetAddressPrefixCIDR": {
      "type": "int",
      "defaultValue": 16,
      "maxValue": 28,
      "metadata": {
        "description": "Virtual Network CIDR Block"
      }
    },
    "WAFSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0",
      "metadata": {
        "description": "WAF Subnet IP Address Without CIDR Block"
      }
    },
    "WAFSubnetPrefixCIDR": {
      "type": "int",
      "defaultValue": 24,
      "maxValue": 28,
      "metadata": {
        "description": "WAF Subnet CIDR Block"
      }
    },
    "WebAppSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0",
      "metadata": {
        "description": "Web App Subnet IP Address Without CIDR Block"
      }
    },
    "WebAppSubnetPrefixCIDR": {
      "type": "int",
      "defaultValue": 24,
      "maxValue": 28,
      "metadata": {
        "description": "Web App Subnet CIDR Block"
      }
    },
    "RedisCacheSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.3.0",
      "metadata": {
        "description": "Redis Cache Subnet IP Address Without CIDR Block"
      }
    },
    "RedisCacheSubnetPrefixCIDR": {
      "type": "int",
      "defaultValue": 24,
      "maxValue": 32,
      "metadata": {
        "description": "Redis Cache Subnet CIDR Block"
      }
    },
    "redisShardCount": {
      "defaultValue": 2,
      "type": "int",
      "metadata": {
        "description": "Number of highly available shards to create in the cluster. Requires Premium SKU. Set to 0 to not set up clustering."
      }
    },
    "redisCacheCapacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "The size of the new Azure Redis Cache instance. Valid family and capacity combinations are (C0..C6, P1..P4)."
      }
    },
    "appServicePlanNameWeb": {
      "type": "string",
      "metadata": {
        "description": "The name of the App Service plan to use for hosting the web app."
      }
    },
    "WebDNS": {
      "type": "string",
      "defaultValue": "Web.demo",
      "metadata": {
        "description": "Set this to the root domain associated with the Web App."
      }
    },
    "internalLoadBalancingMode": {
      "type": "int",
      "metadata": {
        "description": "0 = public VIP only, 1 = only ports 80/443 are mapped to ILB VIP, 2 = only FTP ports are mapped to ILB VIP, 3 = both ports 80/443 and FTP ports are mapped to an ILB VIP."
      }
    },
    "frontEndSize": {
      "type": "string",
      "allowedValues": [
        "Medium",
        "Large",
        "ExtraLarge"
      ],
      "metadata": {
        "description": "Instance size for the front-end pool.  Maps to P2,P3,P4."
      }
    },
    "frontEndCount": {
      "type": "int",
      "metadata": {
        "description": "Number of instances in the front-end pool.  Minimum of two."
      }
    },
    "workerPoolOneInstanceSize": {
      "type": "string",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "ExtraLarge"
      ],
      "metadata": {
        "description": "Instance size for worker pool one.  Maps to P1,P2,P3,P4."
      }
    },
    "workerPoolOneInstanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of instances in worker pool one.  Minimum of two."
      }
    },
    "workerPoolTwoInstanceSize": {
      "type": "string",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "ExtraLarge"
      ],
      "metadata": {
        "description": "Instance size for worker pool two.  Maps to P1,P2,P3,P4."
      }
    },
    "workerPoolTwoInstanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of instances in worker pool two.  Can be zero if not using worker pool two."
      }
    },
    "workerPoolThreeInstanceSize": {
      "type": "string",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "ExtraLarge"
      ],
      "metadata": {
        "description": "Instance size for worker pool three.  Maps to P1,P2,P3,P4."
      }
    },
    "workerPoolThreeInstanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of instances in worker pool three.  Can be zero if not using worker pool three."
      }
    },
    "numberOfWorkersFromWorkerPool": {
      "type": "int",
      "metadata": {
        "description": "Defines the number of workers from the worker pool that will be used by the app service plan."
      }
    },
    "workerPool": {
      "type": "string",
      "metadata": {
        "description": "Defines which worker pool's (WP1, WP2 or WP3) resources will be used for the app service plan."
      }
    },
    "applicationGatewaySize": {
      "type": "string",
      "allowedValues": [
        "WAF_Small",
        "WAF_Medium",
        "WAF_Large"
      ],
      "defaultValue": "WAF_Medium",
      "metadata": {
        "description": "WAF Appliaction Gateway Size"
      }
    },
    "wafEnabled": {
      "type": "bool",
      "metadata": {
        "description": "WAF Enabled"
      }
    },
    "WafCapacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "Number of WAF Instances"
      }
    },
    "databaseServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "The name of the configured Service Level Objective of the Azure SQL database. This is the Service Level Objective that is in the process of being applied to the Azure SQL database."
      }
    },
    "databaseEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Web",
        "Business",
        "Basic",
        "Standard",
        "Premium",
        "Free",
        "Stretch",
        "DataWarehouse"
      ],
      "metadata": {
        "description": "The edition of the Azure SQL database. The DatabaseEditions enumeration contains all the valid editions."
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The administrator username of the SQL Server."
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator password of the SQL Server."
      }
    }
  },
  "variables": {
    "vnetName": "[toLower(concat(parameters('SystemPrefixName'),'vNet',uniqueString(resourceGroup().id)))]",
    "WafSubnetName": "[toLower(concat(parameters('SystemPrefixName'),'WafSubnet'))]",
    "WebAppSubnetName": "[toLower(concat(parameters('SystemPrefixName'),'WebAppSubnet'))]",
    "RedisCacheSubnetName": "[toLower(concat(parameters('SystemPrefixName'),'RedisSubnet'))]",
    "redisCacheName": "[toLower(concat(parameters('SystemPrefixName'),'RedisCache',uniqueString(resourceGroup().id)))]",
    "aseWebName": "[toLower(concat(parameters('SystemPrefixName'),'AseWeb',uniqueString(resourceGroup().id)))]",
    "WebAppName": "[toLower(concat(parameters('SystemPrefixName'),'WebApp',uniqueString(resourceGroup().id)))]",
    "applicationGatewayName": "[toLower(concat(parameters('SystemPrefixName'),'WAF',uniqueString(resourceGroup().id)))]",
    "sqlServerName": "[toLower(concat(parameters('SystemPrefixName'),'AzureSql',uniqueString(resourceGroup().id)))]",
    "databaseName": "[toLower(concat(parameters('SystemPrefixName'),'Database'))]",

    "TemplateURIs": "https://raw.githubusercontent.com/mayurshintre/Blueprints-PaaS-ASE/Dual-Ase/ase-ilb-blueprint/templates/",

    "wafMode": "Prevention",
    "wafRuleSetType": "OWASP",
    "wafRuleSetVersion": "3.0",

    "VaultName": "[concat('ILBaseVault',uniqueString(resourceGroup().id))]",
    "VaultSKU": "Premium",

    "vnetAddressSpace": "[concat(parameters('vnetAddressPrefix'), '/', parameters('vnetAddressPrefixCIDR'))]",
    "WAFSubnetAddressSpace": "[concat(parameters('WAFSubnetPrefix'), '/', parameters('WAFSubnetPrefixCIDR'))]",
    "WebAppSubnetAddressSpace": "[concat(parameters('WebAppSubnetPrefix'), '/', parameters('WebAppSubnetPrefixCIDR'))]",
    "RedisCacheSubnetAddressSpace": "[concat(parameters('RedisCacheSubnetPrefix'), '/', parameters('RedisCacheSubnetPrefixCIDR'))]",
    "VnetID": "[concat(resourceId('Microsoft.Network/VirtualNetworks', variables('vnetName')))]",
    "SubNetID": "[concat(variables('VnetID'), '/subnets/')]",

    "redisCachemaxclients": 7500,
    "redisCachemaxmemoryreserved": 200,
    "redisCachemaxfragmentationmemory-reserved": 300,
    "redisCachemaxmemory-delta": 200,

    "RedisCacheSplit": "[split(parameters('RedisCacheSubnetPrefix'),'.')]",
    "RedisCacheConvert": "[int(variables('RedisCacheSplit')[3])]",
    "RedisCacheAdd": "[add(variables('RedisCacheConvert'),4)]",
    "RedisCacheLastOctet": "[string(variables('RedisCacheAdd'))]",
    "RedisCacheStaticIP": "[concat(variables('RedisCacheSplit')[0],'.',variables('RedisCacheSplit')[1],'.',variables('RedisCacheSplit')[2],'.',variables('RedisCacheLastOctet'))]",

    "WAFBackEndPoolSplit": "[split(parameters('WebAppSubnetPrefix'),'.')]",
    "WAFBackEndPoolConvert": "[int(variables('WAFBackEndPoolSplit')[3])]",
    "WAFBackEndPoolAdd": "[add(variables('WAFBackEndPoolConvert'),4)]",
    "WAFBackEndPoolLastOctet": "[string(variables('WAFBackEndPoolAdd'))]",
    "WAFBackEndPoolStaticIP1": "[concat(variables('WAFBackEndPoolSplit')[0],'.',variables('WAFBackEndPoolSplit')[1],'.',variables('WAFBackEndPoolSplit')[2],'.',variables('WAFBackEndPoolLastOctet'))]",

    "Secretname": "SqlSecret"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "KeyVault",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('TemplateURIs'),'keyvault.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VaultName": { "value": "[variables('VaultName')]" },
          "Region": { "value": "[parameters('Region')]" },
          "VaultSku": { "value": "[variables('VaultSKU')]" },
          "SecretName": { "value": "[variables('SecretName')]" },
          "SecretValue": { "value": "[parameters('sqlAdministratorLoginPassword')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "Vnet",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('TemplateURIs'),'newvnetazuredns.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": { "value": "[variables('vnetName')]" },
          "Region": { "value": "[parameters('Region')]" },
          "vnetAddressSpace": { "value": "[variables('vnetAddressSpace')]" },
          "vnetAddressPrefix": { "value": "[parameters('vnetAddressPrefix')]" },
          "vnetAddressPrefixCIDR": { "value": "[parameters('vnetAddressPrefixCIDR')]" },
          "WAFSubnetAddressSpace": { "value": "[variables('WAFSubnetAddressSpace')]" },
          "WAFSubnetName": { "value": "[variables('WAFSubnetName')]" },
          "WAFSubnetPrefixCIDR": { "value": "[parameters('WAFSubnetPrefixCIDR')]" },
          "WAFSubnetPrefix": { "value": "[parameters('WAFSubnetPrefix')]" },
          "WebAppSubnetAddressSpace": { "value": "[variables('WebAppSubnetAddressSpace')]" },
          "WebAppSubnetName": { "value": "[variables('WebAppSubnetName')]" },
          "WebAppSubnetPrefix": { "value": "[parameters('WebAppSubnetPrefix')]" },
          "WebAppSubnetPrefixCIDR": { "value": "[parameters('WebAppSubnetPrefixCIDR')]" },
          "RedisCacheSubnetAddressSpace": { "value": "[variables('RedisCacheSubnetAddressSpace')]" },
          "RedisCacheSubnetName": { "value": "[variables('RedisCacheSubnetName')]" },
          "RedisCacheSubnetPrefix": { "value": "[parameters('RedisCacheSubnetPrefix')]" },
          "RedisCacheSubnetPrefixCIDR": { "value": "[parameters('RedisCacheSubnetPrefixCIDR')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "AseWeb",
      "apiVersion": "2016-09-01",
      "dependsOn": [ "Vnet" ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('TemplateURIs'),'ilbase.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "aseName": { "value": "[variables('aseWebName')]" },
          "Region": { "value": "[parameters('Region')]" },
          "vnetID": { "value": "[variables('vnetID')]" },
          "SubnetName": { "value": "[variables('WebAppSubnetName')]" },
          "internalLoadBalancingMode": { "value": "[parameters('internalLoadBalancingMode')]" },
          "DNS": { "value": "[parameters('WebDNS')]" },
          "frontEndSize": { "value": "[parameters('frontEndSize')]" },
          "frontEndCount": { "value": "[parameters('frontEndCount')]" },
          "workerPoolOneInstanceSize": { "value": "[parameters('workerPoolOneInstanceSize')]" },
          "workerPoolOneInstanceCount": { "value": "[parameters('workerPoolOneInstanceCount')]" },
          "workerPoolTwoInstanceSize": { "value": "[parameters('workerPoolTwoInstanceSize')]" },
          "workerPoolTwoInstanceCount": { "value": "[parameters('workerPoolTwoInstanceCount')]" },
          "workerPoolThreeInstanceSize": { "value": "[parameters('workerPoolThreeInstanceSize')]" },
          "workerPoolThreeInstanceCount": { "value": "[parameters('workerPoolThreeInstanceCount')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "AspWeb",
      "apiVersion": "2016-09-01",
      "dependsOn": [ "AseWeb" ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('TemplateURIs'),'ilbaseasp.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": { "value": "[parameters('appServicePlanNameWeb')]" },
          "aseName": { "value": "[variables('aseWebName')]" },
          "Region": { "value": "[parameters('Region')]" },
          "workerPool": { "value": "[parameters('workerPool')]" },
          "numberOfWorkersFromWorkerPool": { "value": "[parameters('numberOfWorkersFromWorkerPool')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "RedisCachePremium",
      "apiVersion": "2016-09-01",
      "dependsOn": [ "Vnet" ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('TemplateURIs'),'rediscache.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "redisCacheName": { "value": "[variables('redisCacheName')]" },
          "Region": { "value": "[parameters('Region')]" },
          "redisShardCount": { "value": "[parameters('redisShardCount')]" },
          "redisCacheCapacity": { "value": "[parameters('redisCacheCapacity')]" },
          "virtualNetwork": { "value": "[variables('VnetID')]" },
          "subnet": { "value": "[variables('RedisCacheSubnetName')]" },
          "redisCacheStaticIP": { "value": "[variables('redisCacheStaticIP')]" },
          "redisCachemaxclients": { "value": "[variables('redisCachemaxclients')]" },
          "redisCachemaxmemoryreserved": { "value": "[variables('redisCachemaxmemoryreserved')]" },
          "redisCachemaxfragmentationmemory-reserved": { "value": "[variables('redisCachemaxfragmentationmemory-reserved')]" },
          "redisCachemaxmemory-delta": { "value": "[variables('redisCachemaxmemory-delta')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "WebApp",
      "apiVersion": "2015-01-01",
      "dependsOn": [ "AspWeb" ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('TemplateURIs'),'ilbasewebapp.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebAppName": { "value": "[variables('WebAppName')]" },
          "Region": { "value": "[parameters('Region')]" },
          "appServicePlanName": { "value": "[parameters('appServicePlanNameWeb')]" },
          "aseName": { "value": "[variables('aseWebName')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "WAF",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "AseWeb"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('TemplateURIs'),'waf.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": { "value": "[variables('vnetName')]" },
          "WAFSubnetName": { "value": "[variables('WAFSubnetName')]" },
          "Region": { "value": "[parameters('Region')]" },
          "subnetPrefix": { "value": "[variables('WAFSubnetAddressSpace')]" },
          "addressPrefix": { "value": "[variables('vnetAddressSpace')]" },
          "applicationGatewayName": { "value": "[variables('applicationGatewayName')]" },
          "applicationGatewaySize": { "value": "[parameters('applicationGatewaySize')]" },
          "capacity": { "value": "[parameters('WafCapacity')]" },
          "wafMode": { "value": "[variables('wafMode')]" },
          "wafRuleSetType": { "value": "[variables('wafRuleSetType')]" },
          "wafRuleSetVersion": { "value": "[variables('wafRuleSetVersion')]" },
          "backendIpAddress1": { "value": "[variables('WAFBackEndPoolStaticIP1')]" },
          "wafEnabled": { "value": "[parameters('wafEnabled')]" },
          "webAppDNS": { "value": "[parameters('WebDNS')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "SQL",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('TemplateURIs'),'azuresql.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Region": { "value": "[parameters('Region')]" },
          "sqlAdministratorLogin": { "value": "[parameters('sqlAdministratorLogin')]" },
          "sqlAdministratorLoginPassword": { "value": "[parameters('sqlAdministratorLoginPassword')]" },
          "sqlServerName": { "value": "[variables('sqlServerName')]" },
          "databaseName": { "value": "[variables('databaseName')]" },
          "databaseEdition": { "value": "[parameters('databaseEdition')]" },
          "databaseServiceObjectiveName": { "value": "[parameters('databaseServiceObjectiveName')]" }
        }
      }
    }
  ],
  "outputs": {
    "AseWebName": {
      "type": "string",
      "value": "[variables('aseWebName')]"
    },
    "VnetName": {
      "type": "string",
      "value": "[variables('vnetName')]"
    },
    "SqlName": {
      "type": "string",
      "value": "[variables('sqlServerName')]"
    },
    "AppGWName": {
      "type": "string",
      "value": "[variables('applicationGatewayName')]"
    }
  }
 }